import os
import logging
from datetime import datetime
from typing import Optional

from telegram import (
    Update, 
    InlineKeyboardMarkup,
    InlineKeyboardButton
)
from telegram.ext import (
    Application, 
    CommandHandler, 
    MessageHandler, 
    CallbackQueryHandler,
    ContextTypes, 
    filters,
    ConversationHandler
)

from database import Database

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
DISTANCE, CONFIRMATION = range(2)

class RunningBot:
    def __init__(self, token: str, db: Database):
        self.token = token
        self.db = db
        self.application = Application.builder().token(token).build()
        
        self._setup_handlers()
    
    def _setup_handlers(self):
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≥—Ä—É–ø–ø–∞ 1 - –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        self.application.add_handler(CommandHandler("start", self._start_private), group=1)
        self.application.add_handler(CommandHandler("stats", self._show_stats), group=1)
        self.application.add_handler(CommandHandler("help", self._help), group=1)
        
        # ConversationHandler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–µ–∂–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ –õ–°)
        conv_handler = ConversationHandler(
            entry_points=[
                CommandHandler("add", self._add_run_start),
                MessageHandler(filters.TEXT & filters.Regex(r'#—è–ø–æ–±–µ–≥–∞–ª'), self._add_run_start)
            ],
            states={
                DISTANCE: [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, self._receive_distance)
                ],
                CONFIRMATION: [
                    CallbackQueryHandler(self._confirm_run, pattern=r'^confirm_'),
                    CallbackQueryHandler(self._cancel_run, pattern=r'^cancel_')
                ]
            },
            fallbacks=[CommandHandler("cancel", self._cancel_conversation)],
        )
        self.application.add_handler(conv_handler, group=1)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤ –≥—Ä—É–ø–ø–µ (–≥—Ä—É–ø–ø–∞ 2 - –Ω–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        self.application.add_handler(CallbackQueryHandler(self._group_button_handler, pattern=r'^add_run$'), group=2)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–∞—Ö
        self.application.add_handler(MessageHandler(filters.ChatType.GROUPS, self._group_message_handler), group=2)
    
    async def _start_private(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö"""
        user = update.effective_user
        chat = update.effective_chat
        
        # –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
        if chat.type != "private":
            await update.message.reply_text(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–µ–∂–∫–∞–º–∏!"
            )
            return
        
        if not self.db.user_exists(user.id):
            self.db.add_user(user.id, user.first_name, user.last_name, user.username)
            await update.message.reply_text(
                f"üèÉ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!\n\n"
                "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–µ–≥–æ–≤–æ–º –±–æ—Ç–µ!\n\n"
                "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "/add - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–∂–∫—É\n"
                "/stats - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                "/help - –ü–æ–º–æ—â—å\n\n"
                "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ö–µ—à—Ç–µ–≥–æ–º #—è–ø–æ–±–µ–≥–∞–ª –∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–µ–π!"
            )
        else:
            await update.message.reply_text(
                f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.first_name}!\n\n"
                "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "/add - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–∂–∫—É\n" 
                "/stats - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                "/help - –ü–æ–º–æ—â—å\n\n"
                "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ö–µ—à—Ç–µ–≥–æ–º #—è–ø–æ–±–µ–≥–∞–ª –∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–µ–π!"
            )
    
    async def _add_run_start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–µ–∂–∫–∏"""
        user = update.effective_user
        chat = update.effective_chat
        
        # –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
        if chat.type != "private":
            await update.message.reply_text(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–∂–∫—É!"
            )
            return ConversationHandler.END
        
        if not self.db.user_exists(user.id):
            await update.message.reply_text(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start"
            )
            return ConversationHandler.END
        
        await update.message.reply_text(
            "üèÉ –í–≤–µ–¥–∏—Ç–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏—é –≤–∞—à–µ–π –ø—Ä–æ–±–µ–∂–∫–∏:\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "‚Ä¢ 5 –∫–º\n"
            "‚Ä¢ 10.5 –∫–º\n" 
            "‚Ä¢ 7.2 –∫–º\n\n"
            "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
        )
        
        return DISTANCE
    
    async def _receive_distance(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏"""
        text = update.message.text
        user = update.effective_user
        
        # –ü–∞—Ä—Å–∏–º –¥–∏—Å—Ç–∞–Ω—Ü–∏—é
        try:
            distance = self._parse_distance(text)
            if distance <= 0:
                raise ValueError("–î–∏—Å—Ç–∞–Ω—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π")
        except (ValueError, IndexError):
            await update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "‚Ä¢ 5 –∫–º\n"
                "‚Ä¢ 10.5 –∫–º\n"
                "‚Ä¢ 7.2 –∫–º\n\n"
                "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã"
            )
            return DISTANCE
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏—Å—Ç–∞–Ω—Ü–∏—é –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        context.user_data['distance'] = distance
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_{distance}"),
                InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_run")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            f"üìù –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–∂–∫–∏:\n"
            f"–î–∏—Å—Ç–∞–Ω—Ü–∏—è: {distance} –∫–º\n\n"
            "–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç —Ö–µ—à—Ç–µ–≥ #modern",
            reply_markup=reply_markup
        )
        
        return CONFIRMATION
    
    async def _confirm_run(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–µ–∂–∫–∏"""
        query = update.callback_query
        await query.answer()
        
        user = query.from_user
        distance = context.user_data.get('distance', 0)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–∂–∫—É –≤ –±–∞–∑—É
        self.db.add_run(user.id, distance)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_runs = self.db.get_user_stats(user.id)['total_runs']
        total_distance = self.db.get_user_stats(user.id)['total_distance']
        
        await query.edit_message_text(
            f"‚úÖ –ü—Ä–æ–±–µ–∂–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n"
            f"–î–∏—Å—Ç–∞–Ω—Ü–∏—è: {distance} –∫–º\n"
            f"–í—Å–µ–≥–æ –ø—Ä–æ–±–µ–∂–µ–∫: {total_runs}\n"
            f"–û–±—â–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è: {total_distance:.1f} –∫–º\n\n"
            f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç—Ç–∏–º –≤ —á–∞—Ç–µ: #—è–ø–æ–±–µ–≥–∞–ª {distance}–∫–º"
        )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        context.user_data.clear()
        return ConversationHandler.END
    
    async def _cancel_run(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–º–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–µ–∂–∫–∏"""
        query = update.callback_query
        await query.answer()
        
        await query.edit_message_text(
            "‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–∂–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        )
        
        context.user_data.clear()
        return ConversationHandler.END
    
    async def _cancel_conversation(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–º–µ–Ω–∞ –¥–∏–∞–ª–æ–≥–∞"""
        await update.message.reply_text(
            "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–∂–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        )
        
        context.user_data.clear()
        return ConversationHandler.END
    
    async def _show_stats(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user = update.effective_user
        chat = update.effective_chat
        
        if chat.type != "private":
            await update.message.reply_text(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!"
            )
            return
        
        if not self.db.user_exists(user.id):
            await update.message.reply_text(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start"
            )
            return
        
        stats = self.db.get_user_stats(user.id)
        
        if stats['total_runs'] == 0:
            await update.message.reply_text(
                "üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ–±–µ–∂–µ–∫.\n"
                "–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –ø—Ä–æ–±–µ–∂–∫—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add"
            )
        else:
            await update.message.reply_text(
                f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
                f"–í—Å–µ–≥–æ –ø—Ä–æ–±–µ–∂–µ–∫: {stats['total_runs']}\n"
                f"–û–±—â–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è: {stats['total_distance']:.1f} –∫–º\n"
                f"–°—Ä–µ–¥–Ω—è—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è: {stats['average_distance']:.1f} –∫–º\n"
                f"–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–±–µ–∂–∫–∞: {stats['last_run_distance']} –∫–º"
            )
    
    async def _help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–º–æ—â—å"""
        chat = update.effective_chat
        
        if chat.type != "private":
            await update.message.reply_text(
                "‚ÑπÔ∏è –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–±–µ–∂–∫–∏.\n\n"
                "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º!"
            )
            return
        
        await update.message.reply_text(
            "üèÉ –ü–æ–º–æ—â—å –ø–æ –±–µ–≥–æ–≤–æ–º—É –±–æ—Ç—É:\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n"
            "/add - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–∂–∫—É\n"
            "/stats - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
            "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
            "–ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ:\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ö–µ—à—Ç–µ–≥–æ–º #—è–ø–æ–±–µ–≥–∞–ª –∏ –¥–∏—Å—Ç–∞–Ω—Ü–∏–µ–π\n"
            "–ü—Ä–∏–º–µ—Ä: #—è–ø–æ–±–µ–≥–∞–ª 5.2–∫–º\n\n"
            "–í –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–∂–∫—É' "
            "–¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –±–æ—Ç—É –≤ –õ–°"
        )
    
    async def _group_button_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤ –≥—Ä—É–ø–ø–µ"""
        query = update.callback_query
        user = query.from_user
        
        # –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –õ–°
        await query.answer(
            "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–∂–∫—É!", 
            show_alert=True
        )
    
    async def _group_message_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–∞—Ö"""
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–∞—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –∫–æ–º–∞–Ω–¥—ã
        if update.message.text and not update.message.text.startswith('/'):
            return
        
        # –î–ª—è –∫–æ–º–∞–Ω–¥ –≤ –≥—Ä—É–ø–ø–∞—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –õ–°
        if update.message.text and update.message.text.startswith('/'):
            await update.message.reply_text(
                "‚ÑπÔ∏è –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!"
            )
    
    def _parse_distance(self, text: str) -> float:
        """–ü–∞—Ä—Å–∏—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏—é –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        text = text.lower().strip()
        
        # –£–±–∏—Ä–∞–µ–º "–∫–º", "km" –∏ –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        text = text.replace('–∫–º', '').replace('km', '').strip()
        
        # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—ã–µ –Ω–∞ —Ç–æ—á–∫–∏
        text = text.replace(',', '.')
        
        # –ü–∞—Ä—Å–∏–º —á–∏—Å–ª–æ
        return float(text)
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        self.application.run_polling()
